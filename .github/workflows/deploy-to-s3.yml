# This is a basic workflow to help you get started with Actions

name: deploy-to-s3

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build and deploy to s3
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # node version lists
    strategy:
      matrix:
        node-version: ['12.x']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      # Runs a single command using the runners shell
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Run npm install and build
      - name: install and build
        # CI=false ignore error
        run: |
          cd examples/vue-app
          npm ci
          CI=false npm run build
          
      # - run: npm ci
      # - run: npm run build:prod

      # Runs a set of commands using the runners shell
      - name: upload-s3
        # using this workflow and this one is checking CloudFront
        uses: opspresso/action-s3-sync@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ORG_DEMO_FRONT_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ORG_DEMO_FRONT_S3_SECRET_KEY }}
          AWS_REGION: "ap-northeast-1"
          FROM_PATH: "./examples/vue-app/dist"
          DEST_PATH: "s3://upbond-demo-tkey/public"
          # acl (set access permissions)
          # delete option (removing files that do not exist in the source )
          OPTIONS: "--acl public-read"